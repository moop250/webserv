////////////////////////////////////////
// CONFIGURATION LOGIC UNIT EXPLAINED //
////////////////////////////////////////

Starting with an example,
	ideally prototype a server as :

"
	server {
		...
		...
		...
	}
"

It works by the following rules :

1) Define his range by '{}' as :
	server { ... }

2) Each attribute must be splitted by ';' as :
	server { ... ; ... }

3) There can be multiple servers as :
	server { ... } server { ... }

4) The server accepted attributes have to be formated as :
	- hosts	: "host"			: '<token> host'
	- listeners "listen"			: '<token> port'
	- server name "server_name"		: '<token> name'
	- root path "root"			: '<token> path'
	- index	"html_index"			: '<token> file'
	- autoindex "autoindex"			: '<token> ON | OFF' 
	- error pages "error_page"		: '<token> nb path'
	- storage "upload_storage"		: '<token> path'
	- CGI "CGI" 				: '<token> file.py | file.php | ... <space> path'
	- client BufSize "client_max_body_size"	: '<token> size'
	- Methods allowed "allow"		: '<token> M1 M2 ... Mi'
	- location bloc	"location"		: 'token path { ... }'

5) The location bloc has to respect the same format as a server

6) There can be multiple location ports in a same server

7) The location accepted attributes are the same as server except :
	- hosts
	- listen
	- location
	- server name

8) If no argument is given to webserv a default configuration take place.

9) Same for the error pages and the methos allowed. If undefined
	methods allowed will be GET DELETE POS. If undefined error page
	a 404 not found will be throw (i think...)
 
...)
	...

N) If one of the precedent rules aren't respected, the programm won't launch
